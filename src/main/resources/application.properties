# ===============================
# = DATA SOURCE
# ===============================
# Set here configurations for the database connection
# Connection url for the database "netgloo_blog"
# Username and password
spring.datasource.url=jdbc:mysql://127.0.0.1:3306/springbootfirstapp
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
#spring.datasource.url=jdbc:mysql://207.154.225.93:6603/wordtreasureapp?useUnicode=yes&characterEncoding=UTF-8
spring.datasource.username=root
#spring.datasource.password=root
#spring.datasource.password = root
#spring.datasource.url = jdbc:mysql://localhost:3306/todo
#spring.datasource.username = root
#spring.datasource.password = 1q2w3e4r
# ===============================
# = JPA / HIBERNATE
# ===============================
# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).
# Show or not log for each sql query
spring.jpa.show-sql=true
# Hibernate ddl auto (create, create-drop, update): with "update" the database
# the project
# schema will be automatically updated accordingly to java entities found in
spring.jpa.hibernate.ddl-auto=validate
# Naming strategy
#spring.jpa.hibernate.naming-strategy=org.hibernate.cfg.ImprovedNamingStrategy
spring.jpa.hibernate.naming.implicit-strategy=org.hibernate.boot.model.naming.ImplicitNamingStrategyLegacyHbmImpl
spring.jpa.hibernate.naming.physical-strategy=org.springframework.boot.orm.jpa.hibernate.SpringPhysicalNamingStrategy
# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect =org.hibernate.dialect.MySQL5InnoDBDialect
spring.data.jpa.repositories.enabled=true